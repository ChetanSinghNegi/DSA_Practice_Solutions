
class Solution
{
	public int minOperations(String text1, String text2) 
	{ 
	    int n = text1.length();
        int m = text2.length();
        int[][] dp = new int[n + 1][m + 1];
        for(int i = n - 1; i >= 0; i--){
            for(int j = m - 1 ; j >= 0; j--){
                if(text1.charAt(i) == text2.charAt(j)){
                    dp[i][j] = 1 + dp[i + 1][j + 1];
                }else{
                    dp[i][j] = Math.max(dp[i + 1][j], dp[i][j + 1]);
                }
            }
        }
        int lcs = dp[0][0];
        
        //time req for deleting string of text1 except lcs =text1.length() - lcs 
        //time req for inserting string of text2 except lcs =text2.length() - lcs 
        return text1.length() + text2.length() - 2 * lcs;
	    
	} 
}
