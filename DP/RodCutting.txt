
class Solution{
    public int cutRod(int price[], int n) {
        //code here
        int[] dp = new int[n + 1];
        Arrays.fill(dp, -1);
        int ans = helper(n, dp, price);
        // for(int i=0; i<=n ;i++){
        //     System.out.print(dp[i]+"  ");
        // }
        return ans;
    }
    
    public int helper( int len, int[] dp, int[] price){
        if(len == 0) return 0;
        
        if(dp[len] != -1) return dp[len];
        
        int currMaxPrice = 0;
        for(int i = 1;i <= len; i++){
               int smallRod = helper( len - i, dp, price) + price[i - 1];
               currMaxPrice = Math.max(smallRod, currMaxPrice);
        }
        dp[len] = currMaxPrice;
        return currMaxPrice;
    }   
}