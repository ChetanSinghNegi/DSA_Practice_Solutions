//potential buying day
class Solution {
    public int maxProfit(int[] prices) {
        int maxProfit = Integer.MIN_VALUE;
        int maxSellingPrice = Integer.MIN_VALUE;
        for(int i = prices.length - 1; i >= 0; i--){
            maxSellingPrice = Math.max(prices[i], maxSellingPrice);
            int currProfit = maxSellingPrice - prices[i];
            maxProfit = Math.max(currProfit, maxProfit);
        }
        return maxProfit;
    }
}

// potential selling day
class Solution {
    public int maxProfit(int[] prices) {
        int maxProfit = Integer.MIN_VALUE;
        int minBuyingPrice = Integer.MAX_VALUE;
        for(int i = 0; i<prices.length; i++){
            minBuyingPrice = Math.min(minBuyingPrice, prices[i]);
            int currProfit = prices[i] - minBuyingPrice;
            maxProfit = Math.max(maxProfit, currProfit);
        }
        return maxProfit;
    }
}