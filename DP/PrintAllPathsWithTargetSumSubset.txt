    

class Solution{
    public class Pair{
        int row,col;
        String psf;
        Pair(int row, int col, String psf){
            this.row = row;
            this.col = col;
            this.psf = psf;
        }
    }

    static int mod = 1000000007;
	public int perfectSum(int arr[],int n, int sum){
	    int[][] dp = new int[n + 1][sum + 1];
        dp[0][0] = 1;
        for(int i = 1;i <= n; i++){
            for(int j = 0; j <= sum; j++){
                int no = dp[i - 1][j];
                int yes = j >= arr[i - 1]? dp[i - 1][j - arr[i - 1]]:0;
                dp[i][j] = (no + yes) % mod;
            }
        }
        
        Queue<Pair> q = new ArrayDeque<>();
        q.add(new Pair(n,sum,""));
        
        while(q.size() > 0){
            Pair rem = q.remove();
            if(rem.row == 0 ){
                System.out.println(rem.psf+"  ");
                continue;
            }
            
            //no call
            if(dp[rem.row - 1][rem.col] != 0){
                q.add(new Pair(rem.row - 1, rem.col, rem.psf));
            }
            
            //yes call
            if(rem.col >= arr[rem.row - 1] && dp[rem.row - 1][rem.col - arr[rem.row - 1]] != 0){
                q.add(new Pair(rem.row - 1,rem.col - arr[rem.row - 1], arr[rem.row - 1] +" "+ rem.psf ));
            }
        }
        
        return dp[n][sum];
        
        
    }   
}