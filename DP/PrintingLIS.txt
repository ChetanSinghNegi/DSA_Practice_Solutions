class Solution {
    public int lengthOfLIS(int[] nums) {
        int n = nums.length ;
        int[] dpCount = new int[n];
        int[] dpPrev = new int[n];
        int max = 0;
        for(int i = 0;i < n; i++){
            dpCount[i] = 1;
            dpPrev[i] = -1;
            for(int j = 0; j < i; j++){
                if(nums[j] < nums[i] && dpCount[j] + 1 >= dpCount[i]){
                    dpCount[i] = dpCount[j] + 1;
                    dpPrev[i] = j;
                }
            }
            max = Math.max(max, dpCount[i]);
        }

        int idx ;
        for(idx = 0;idx < n; idx++){
            if(dpCount[idx] == max) break;
        }
        ArrayList<Integer> ans = new ArrayList<>();
        while(idx != -1){
            ans.add(nums[idx]);
            idx = dpPrev[idx];
        }
        Collections.reverse(ans);
        System.out.println(ans);

        return max;

    }
}