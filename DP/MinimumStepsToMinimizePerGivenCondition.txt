
class Solution{

	public int minSteps(int n) 
	{ 
	    // Your code goes here
	    int[] dp = new  int[n+1];
	    Arrays.fill(dp, -1);
	    dp[1] = 0;
	    helper(n, dp);
	    return dp[n];
	} 
	
	public int helper(int idx, int[] dp){
	    if(idx == 1 || dp[idx] != -1) return dp[idx];
	    
	    int currSteps = Integer.MAX_VALUE;
	    int ans1 = (idx % 2 == 0) ? helper(idx/2, dp):Integer.MAX_VALUE;
	    int ans2 = (idx % 3 == 0) ? helper(idx/3, dp):Integer.MAX_VALUE;
	    int ans3 = helper(idx - 1, dp);
	    currSteps = Math.min(Math.min(ans1, ans2),ans3) + 1;
        dp[idx] = currSteps;
	    return dp[idx];
	    
	}
}

