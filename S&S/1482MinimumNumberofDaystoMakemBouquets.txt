class Solution {
    public int minDays(int[] bloomDay, int m, int k) {
        int max=0;
        int min=0;
        for(int curr:bloomDay){
            if(curr>max){
                max=curr;
            }
            if(curr<min){
                min=curr;
            }
        }
        int left=min;
        int right=max;
        min=-1;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(isPossible(bloomDay,m,mid,k)){
                min=mid;
                right=mid-1;
            }else{
                left=mid+1;
            }
        }
        return min;
    }

    public boolean isPossible(int[] weights,int bouquets,int mid,int count){
        int bCount=0;
        int k=0;
        for(int i=0;i<weights.length;i++){
            int ele=weights[i];
            if(ele<=mid){
                k++;
            }else{
                k=0;
            }
            if(k==count){
                bCount++;
                k=0;
            }
        }
        if(bCount<bouquets){
            return false;
        }
        return true;
    }
}