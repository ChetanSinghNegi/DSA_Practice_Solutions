class Solution {
    public static int minRadius(int[] arr, int target){
        int left = 0, right = arr.length - 1;

        while(left <= right){
            int mid = left + (right - left) / 2;

            if(arr[mid] > target){
                right = mid - 1;
            }
            else if(arr[mid]<target){
                left = mid + 1;
            }else{
                return 0;
            }
        }
        if(left==arr.length){
            return Math.abs(target-arr[arr.length-1]);
        }else if(right<0){
            return Math.abs(target-arr[0]);
        }else{
            int lD=Math.abs(target-arr[left]);
            int rD=Math.abs(target-arr[right]);
            return (lD<rD)?lD:rD;
        }
    }
    
    
    public int findRadius(int[] houses, int[] heaters) {
        Arrays.sort(heaters);
        
        int max = Integer.MIN_VALUE;
        for(int i=0; i<houses.length; i++){
            
            int closestHeater = minRadius(heaters, houses[i]);
            max = Math.max(max, closestHeater);
            // System.out.println(closestHeater+)
        }
        return max;
    }
}