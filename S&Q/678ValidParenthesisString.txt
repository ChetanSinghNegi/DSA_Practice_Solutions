class Solution {
    public boolean checkValidString(String s) {
        Stack<Integer> st = new Stack<>();
        Stack<Integer> ast = new Stack<>();
        
        for(int i=0;i<s.length();i++){
            char ch=s.charAt(i);
            if(ch=='(') st.push(i);
            else if(ch=='*') ast.push(i);
            else{
                if(st.size()>0){   //if matching opening bracket found
                    st.pop();
                }else if(ast.size()>0){   //if extra ast found to compensate 
                    ast.pop();
                }else{   //unvalid parenthesis
                    return false;
                }
            }
        }

        //testing
        // System.out.println(st);
        // System.out.println(ast);

        //removing extra opening brackets with astricts
        while(ast.size()>0){
            if(st.size()>0 && st.peek()<ast.peek()){
                st.pop();
                ast.pop();
            }else{
                ast.pop();
            }
        }

        //getting results
        if(st.size()>0) return false;
        return true;
    }
}