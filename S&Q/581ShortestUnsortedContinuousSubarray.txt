class Solution {
    public int findUnsortedSubarray(int[] nums) {
        int ans=0;
        int n=nums.length;
        int[] temp=new int[n];
        Stack<Integer> st=new Stack<>();
        int s=0,ed=0;
        for(int i=n-1;i>=0;i--){
            int ele=nums[i];
            while(st.size()>0 && nums[st.peek()]>=ele){
                st.pop();
            }
            if(st.size()>0){
                temp[i]=st.peek();
            }else temp[i]=-1;
            st.push(i);
        }
        for(int i=0;i<n;i++){
            if(temp[i]!=-1){
                s=i;
                break;
            }
        }
        st=new Stack<>();
        for(int i=0;i<n;i++){
            int ele=nums[i];
            while(st.size()>0 && nums[st.peek()]<=ele){
                st.pop();
            }
            if(st.size()>0){
                temp[i]=st.peek();
            }else temp[i]=-1;
            st.push(i);
        }
        for(int i=n-1;i>=0;i--){
            if(temp[i]!=-1){
                ed=i;
                break;
            }
        }
        if(s==0 && ed==0) return 0;
        return ed-s+1;
        
    }
}