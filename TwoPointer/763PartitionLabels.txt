class Solution {
    public List<Integer> partitionLabels(String s) {
        HashMap<Character,Integer> freq=new HashMap<>();
        for(int i=0;i<s.length();i++){
            char ch=s.charAt(i);
            freq.put(ch,freq.getOrDefault(ch,0) + 1);
        }
        int st=0,end=0;
        List<Integer> ans=new ArrayList<>();
        HashMap<Character,Integer> temp=new HashMap<>();
        while(end<s.length()){
            char ch=s.charAt(end);
            temp.put(ch,temp.getOrDefault(ch,0)+1);
            boolean isSame=checkSame(freq,temp);
            if(isSame){
                ans.add(end-st+1);
                st=end+1;
                temp=new HashMap<>();
            }
            end++;
        }
        if(st!=end) ans.add(end-st);
        return ans;
    }
    public boolean checkSame(HashMap<Character,Integer> freq,HashMap<Character,Integer> temp){
        for(Character ch:temp.keySet()){
            if(temp.get(ch) != freq.get(ch)) return false;
        }
        return true;
    }
}