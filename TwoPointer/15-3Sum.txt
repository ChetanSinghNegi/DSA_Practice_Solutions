class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> ans=new ArrayList<>();
        int n=nums.length;
        for(int i=0;i<n;i++){
            if(i>0 && nums[i]==nums[i-1]){  //checking duplicacy only unique allowed
                continue;
            }
            int diff=-nums[i];
            List<List<Integer>> currAns=threeSum(nums,i+1,n-1,diff);
            for(List<Integer> pair:currAns){
                pair.add(nums[i]);
                ans.add(pair);
            }
        }
        return ans;
    }
    public List<List<Integer>> threeSum(int[] nums,int left,int right,int target){
        int start=left;
        List<List<Integer>> currAns=new ArrayList<>();
        while(left<right){
            if(left>start  && nums[left]==nums[left-1]){    //no duplicates allowed
                if(left==nums.length) return currAns;
                left++;
                continue;
            }
            int sum=nums[left]+nums[right];
            if(sum==target){
                List<Integer> li=new ArrayList<>();
                li.add(nums[left]);
                li.add(nums[right]);
                currAns.add(li);
                left++;
                right--;
            }else if(sum>target){
                right--;
            }else{
                left++;
            }
        }
        return currAns;
    }
}