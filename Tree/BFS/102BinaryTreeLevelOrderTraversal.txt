/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> liBig=new ArrayList<>(); 
        if(root==null){
            return liBig;
        }
        Queue<TreeNode> q=new ArrayDeque<>();
        q.add(root);
        int count=1;
        while(q.size()>0){
            List<Integer> li=new ArrayList<>();

            //emptying whole level elements and adding in arrayList
            while(count!=0){
                TreeNode rem=q.remove();
                li.add(rem.val);
                if(rem.left!=null){
                    q.add(rem.left);
                }
                if(rem.right!=null){
                    q.add(rem.right);
                }
                count--;
            }

            //count == 0 so marking again at end and adding ArrayList to List
            count=q.size();
            liBig.add(li);
        }
        return liBig;
    }
}