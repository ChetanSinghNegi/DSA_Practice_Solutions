/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int minDepth(TreeNode root) {
        //base case
        if(root==null) return 0;

        int leftD=minDepth(root.left);
        int rightD=minDepth(root.right);

        //avoiding the fact that one parent can have one child as well
        if(leftD==0) return rightD+1;
        if(rightD==0) return leftD+1;

        //both child available then this will run
        return Math.min(leftD,rightD)+1;
    }
}