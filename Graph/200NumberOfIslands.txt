class Solution {
    public int numIslands(char[][] grid) {
        boolean[][] vis =new boolean[grid.length][grid[0].length];
        int count=0;
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                if(vis[i][j]==false && grid[i][j]=='1'){
                    count++;
                    dfs(grid,vis,i,j);
                }
            }
        }
        return count;
    }
    public void dfs(char[][] grid,boolean[][] vis,int sr,int sc){
        if(sr>=grid.length || sr<0 || sc>=grid[0].length || sc<0 || vis[sr][sc]==true || grid[sr][sc]=='0') return ;

        vis[sr][sc]=true;
        dfs(grid,vis,sr-1,sc);
        dfs(grid,vis,sr,sc+1);
        dfs(grid,vis,sr+1,sc);
        dfs(grid,vis,sr,sc-1);
    }
}