class Solution {
    static int count;
    public int numEnclaves(int[][] grid) {
        boolean[][] vis =new boolean[grid.length][grid[0].length];
        int totalCount=0;
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                if(vis[i][j]==false && grid[i][j]==1){
                    count=0;
                    boolean isSafe=dfs(grid,vis,i,j);
                    // System.out.println(i+"  "+j+"  "+isSafe+"  "+count);
                    if(isSafe==true){
                        totalCount+=count;
                    } 
                }
            }
        }
        return totalCount;
    }
    public boolean dfs(int[][] grid,boolean[][] vis,int sr,int sc){
        //boundary check
        if(sr>=grid.length || sr<0 || sc>=grid[0].length || sc<0 ) return false;

        //normal check
        if(vis[sr][sc]==true || grid[sr][sc]==0) return true;

        vis[sr][sc]=true;
        count++;
        boolean a=dfs(grid,vis,sr-1,sc);
        boolean b=dfs(grid,vis,sr,sc+1);
        boolean c=dfs(grid,vis,sr+1,sc);
        boolean d=dfs(grid,vis,sr,sc-1);
        return (a && b && c && d);
    }
}

