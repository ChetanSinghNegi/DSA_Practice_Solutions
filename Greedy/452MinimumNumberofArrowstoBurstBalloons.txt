class Solution {

    public class Interval{
        int start;
        int end;
        Interval(int s,int e){
            this.start=s;
            this.end=e;
        }
    }
    public static class myComp implements Comparator<Interval>{
        public int compare(Interval i1,Interval i2){
            if(i1.end>i2.end){
                return 1;
            }else if(i1.end<i2.end){
                return -1;
            }else{
                return 0;
            }
        }
    }
    public int findMinArrowShots(int[][] points) {
        Interval[] interval=new Interval[points.length];
        for(int i=0;i<points.length;i++){
            interval[i]=new Interval(points[i][0],points[i][1]);
        }
        Arrays.sort(interval,new myComp());
        long lastEnd=Long.MIN_VALUE;
        int count=0;
        for(int i=0;i<interval.length;i++){
            Interval curr=interval[i];
            if(curr.start>lastEnd){
                lastEnd=curr.end;
                count++;
            }
        }
        return count;
    }
}