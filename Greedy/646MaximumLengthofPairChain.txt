class Solution {

    public class Interval{
        int start;
        int end;
        Interval(int s,int e){
            this.start=s;
            this.end=e;
        }
    }
    public static class myComp implements Comparator<Interval>{
        public int compare(Interval i1,Interval i2){
            if(i1.end!=i2.end){
                return i1.end-i2.end;
            }
            return i1.start-i2.start;
        }
    }
    public int findLongestChain(int[][] pairs) {
        Interval[] interval=new Interval[pairs.length];
        for(int i=0;i<pairs.length;i++){
            interval[i]=new Interval(pairs[i][0],pairs[i][1]);
        }
        Arrays.sort(interval,new myComp());
        int lastEnd=Integer.MIN_VALUE;
        int count=0;
        for(int i=0;i<interval.length;i++){
            Interval curr=interval[i];
            if(curr.start>lastEnd){
                lastEnd=curr.end;
                count++;
            }
        }
         
        return count;
    }
}