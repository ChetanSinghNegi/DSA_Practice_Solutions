class Solution {
    public class Interval{
        int start;
        int end;
        Interval(int s,int e){
            this.start=s;
            this.end=e;
        }
    }

    public static class myComp implements Comparator<Interval>{
        public int compare(Interval m1,Interval m2){
            if(m1.end!=m2.end){
                return m1.end-m2.end;
            }
            return m1.start-m2.start;
        }
    }

    public int eraseOverlapIntervals(int[][] intervals) {
        Interval[] Meetings=new Interval[intervals.length];
        for(int i=0;i<intervals.length;i++){
            Meetings[i]=new Interval(intervals[i][0],intervals[i][1]);
        }
        Arrays.sort(Meetings,new myComp());
        int lastET=Integer.MIN_VALUE;
        int count=0;
        for(Interval currMeeting:Meetings){
            if(currMeeting.start>=lastET){
                lastET=currMeeting.end;
            }else{
                count++;
            }
        }
        return count;
    }
}