class Solution {
    public int fIdx(int[][] intervals,int[] newInterval){
        for(int i=0;i<intervals.length;i++){
            int[] currInterval=intervals[i];
            if(newInterval[0]<=currInterval[1]){
                return i;
            }
        }
        return intervals.length;
    }
    public int lIdx(int[][] intervals,int[] newInterval){
        for(int i=intervals.length-1;i>=0;i--){
            int[] currInterval=intervals[i];
            if(newInterval[1]>=currInterval[0]){
                return i;
            }
        }
        return -1;
    }
    public int[][] insert(int[][] intervals, int[] newInterval) {
        ArrayList<int[]> ans=new ArrayList<>();
        int f=fIdx(intervals,newInterval);
        int l=lIdx(intervals,newInterval);
        for(int i=0;i<f;i++){
            ans.add(intervals[i]);
        }
        if(f>l){
            ans.add(newInterval);
        }else{
            int st=Math.min(newInterval[0],intervals[f][0]);
            int e=Math.max(newInterval[1],intervals[l][1]);
            ans.add(new int[]{st,e});
        }
        for(int i=l+1;i<intervals.length;i++){
            ans.add(intervals[i]);
        }
        int[][] res=new int[ans.size()][2];
        for(int i=0;i<ans.size();i++){
            res[i][0]=ans.get(i)[0];
            res[i][1]=ans.get(i)[1];
        }
        return res;
    }
}