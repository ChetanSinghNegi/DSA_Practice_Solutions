class Solution {
    public int[][] intervalIntersection(int[][] firstList, int[][] secondList) {
        int fIdx=0,sIdx=0;
        ArrayList<int[]> ans=new ArrayList<>();
        while(fIdx<firstList.length && sIdx<secondList.length){
            int s1=firstList[fIdx][0];
            int e1=firstList[fIdx][1];
            int s2=secondList[sIdx][0];
            int e2=secondList[sIdx][1];
            int intersectionSt=Math.max(s1,s2);
            int intersectionEd=Math.min(e1,e2);
            if(intersectionSt<=intersectionEd){
                ans.add(new int[]{intersectionSt,intersectionEd});
            }
            if(e1<e2){
                fIdx++;
            }else{
                sIdx++;
            }
        }
        int[][] res=new int[ans.size()][2];
        for(int i=0;i<ans.size();i++){
            res[i]=ans.get(i);
        }
        return res;
    }
}