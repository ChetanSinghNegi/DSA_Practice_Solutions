/**
 * Definition of Interval:
 * public class Interval {
 *     int start, end;
 *     Interval(int start, int end) {
 *         this.start = start;
 *         this.end = end;
 *     }
 * }
 */

public class Solution {
    /**
     * @param intervals: an array of meeting time intervals
     * @return: if a person could attend all meetings
     */
     public static class myComp implements Comparator<Interval> {
         public int compare(Interval i1,Interval i2){
             if(i1.end!=i2.end){
                 return i1.end-i2.end;
             }
             return i1.start-i2.start;
         }
     }
    public boolean canAttendMeetings(List<Interval> intervals) {
        // Write your code here
        Collections.sort(list<Interval>,new myComp);  //O(nlogn)
        int lastET=Integer.MIN_VALUE;
        for(int i=0;i<intervals.size();i++){  //O(n)
            Interval i1=intervals.get(i);
            if(lastEt>=i2.start){
                return false;
            }
        }
        return true;
    }
}