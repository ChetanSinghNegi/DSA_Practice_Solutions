class Solution {
    public String minWindow(String s, String t) {
        //count of distincts
        HashMap<Character,Integer> hm1=new HashMap<>();
        HashMap<Character,Integer> hm2=new HashMap<>();
        for(int i=0;i<t.length();i++){
            char ch=t.charAt(i);
            hm2.put(ch,hm2.getOrDefault(ch,0)+1);
        }
        int required=hm2.size();
        int found=0;
        int minLength=-1,left=0,right=0,leftAnsIdx=-1;;
        while(right<s.length()){
            char currChar=s.charAt(right);
            hm1.put(currChar,hm1.getOrDefault(currChar,0)+1);
            if(hm2.containsKey(currChar) && hm1.get(currChar).equals(hm2.get(currChar))){
                found++;
            }
            while(found==required && left<=right){
                if(minLength==-1 || right-left+1<minLength){
                    minLength=right-left+1;
                    leftAnsIdx=left;
                }
                // System.out.println(s.substring(leftAnsIdx,leftAnsIdx+minLength));
                char lChar=s.charAt(left);
                hm1.put(lChar,hm1.get(lChar)-1);
                if(hm2.containsKey(lChar) && hm1.get(lChar).intValue()<hm2.get(lChar).intValue()){
                    found--;
                }
                left++;
            }
            right++;
        }
        return minLength==-1?"":s.substring(leftAnsIdx,leftAnsIdx+minLength);
    }
}