class Solution {
    List<String> res;
    
    String[] keypad = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
    public void letterCombinations(int idx, String input, String output){
        if(idx == input.length()){
            if(output.length() > 0){
                res.add(output);
            }
            return;
        }
        
        char digit = input.charAt(idx);
        for(char letter: keypad[digit - '0'].toCharArray()){
            letterCombinations(idx + 1, input, output + letter);
        }
    }
    
    public List<String> letterCombinations(String digits) {
        res = new ArrayList<>();
        letterCombinations(0, digits, "");
        return res;
    }

    //Second Method
    /*
    public List<String> letterCombinations(String digits) {
        List<String> ans=new ArrayList<>();
        if(digits.length()==0){
            return ans;
        }
        ans=helper(digits);
        return ans;
    }
    public List<String> helper(String digits){
        if(digits.length()==0){
            List<String> base=new ArrayList<>();
            base.add("");
            return base;
        }
        char ch=digits.charAt(0);
        String currChars=keypad[ch-'0'];
        List<String> subAns=helper(digits.substring(1));
        List<String> ans=new ArrayList<>();
        for(int i=0;i<currChars.length();i++){
            char currCh=currChars.charAt(i);
            for(String str:subAns){
                ans.add(currCh+str+"");
            }
        }
        return ans;
    }
    */
}
