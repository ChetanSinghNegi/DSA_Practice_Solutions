class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode mid=middleNode(head);
        ListNode reverseHead=reverse(mid.next);

        //testing
        // ListNode temp=head;
        // while(temp!=null){
        //     System.out.print("  "+temp.val);
        //     temp=temp.next;
        // }
        // System.out.println();
        // temp=reverseHead;
        // while(temp!=null){
        //     System.out.print("  "+temp.val);
        //     temp=temp.next;
        // }

        while(head!=null && reverseHead!=null){
            if(head.val!=reverseHead.val) return false;
            head=head.next;
            reverseHead=reverseHead.next;
        }
        return true;
    }

    //reversing llist
    public ListNode reverse(ListNode head){
        ListNode pre=null;
        ListNode curr=head;
        while(curr!=null){
            ListNode ahead=curr.next;
            curr.next=pre;
            pre=curr;
            curr=ahead;
        }
        return pre;
    }
    public ListNode middleNode(ListNode head) {
        ListNode slow=head;
        ListNode fast=head;
        if(head==null) return null;
        while(fast.next!=null && fast.next.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }
}